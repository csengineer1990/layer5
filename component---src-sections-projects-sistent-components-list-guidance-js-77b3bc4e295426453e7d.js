"use strict";(self.webpackChunkLayer5=self.webpackChunkLayer5||[]).push([[2755],{22514:function(e,t,n){n.d(t,{A:function(){return r}});var i=n(96540);const l=[{id:0,link:"/projects/sistent/about",text:"About Sistent"},{id:1,link:"/projects/sistent/identity/color",text:"Colors"},{id:2,link:"/projects/sistent/identity/color/guidance",text:"Colors"},{id:3,link:"/projects/sistent/identity/color/code",text:"Colors"},{id:4,link:"/projects/sistent/identity/spacing",text:"Spacing"},{id:5,link:"/projects/sistent/identity/spacing/guidance",text:"Spacing"},{id:6,link:"/projects/sistent/identity/spacing/code",text:"Spacing"},{id:7,link:"/projects/sistent/identity/typography",text:"Typography"},{id:8,link:"/projects/sistent/identity/typography/guidance",text:"Typography"},{id:9,link:"/projects/sistent/identity/typography/code",text:"Typography"},{id:10,link:"/projects/sistent/components/button",text:"Button"},{id:10,link:"/projects/sistent/components/button/guidance",text:"Button"},{id:11,link:"/projects/sistent/components/button/code",text:"Button"},{id:12,link:"/projects/sistent/components/text-input",text:"Text Input"},{id:13,link:"/projects/sistent/components/text-input/guidance",text:"Text Input"},{id:14,link:"/projects/sistent/components/text-input/code",text:"Text Input"},{id:15,link:"/projects/sistent/components/paper",text:"Paper"},{id:16,link:"/projects/sistent/components/paper/guidance",text:"Paper"},{id:17,link:"/projects/sistent/components/paper/code",text:"Paper"},{id:18,link:"/projects/sistent/components/popper",text:"Popper"},{id:19,link:"/projects/sistent/components/popper/guidance",text:"Popper"},{id:20,link:"/projects/sistent/components/popper/code",text:"Popper"},{id:21,link:"/projects/sistent/components/text-field",text:"Text Field"},{id:22,link:"/projects/sistent/components/text-field/guidance",text:"Text Field"},{id:23,link:"/projects/sistent/components/text-field/code",text:"Text Field"},{id:24,link:"/projects/sistent/components/button-group",text:"Button Group"},{id:25,link:"/projects/sistent/components/button-group/guidance",text:"Button Group"},{id:26,link:"/projects/sistent/components/button-group/code",text:"Button Group"},{id:27,link:"/projects/sistent/components/tooltip",text:"Tooltip"},{id:25,link:"/projects/sistent/components/tooltip/guidance",text:"Tooltip"},{id:26,link:"/projects/sistent/components/tooltip/code",text:"Tooltip"}];var a=n(96044);var s=n(21250).default.div.withConfig({displayName:"paginationstyle__TocPaginationWrapper",componentId:"sc-isbsjw-0"})(["\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  margin: 3rem 2rem 4rem 2rem;\n\n  @media screen and (max-width: 540px) {\n    margin: 0 0 2rem 0;\n    flex-flow: row wrap;\n    gap: 0.3rem;\n  }\n"]);var r=()=>{var e,t;const{0:n,1:r}=(0,i.useState)(0);return(0,i.useEffect)((()=>{const e=window.location.pathname,t=l.findIndex((t=>t.link===e));r(t)}),[]),i.createElement(s,null,n>0?i.createElement(a.default,{$secondary:!0,$url:null===(e=l[n-1])||void 0===e?void 0:e.link},"‚Üê Previous"):null,n<l.length-1?i.createElement(a.default,{$primary:!0,$url:null===(t=l[n+1])||void 0===t?void 0:t.link},"Next ‚Üí"):null)}},55371:function(e,t,n){n.r(t);var i=n(96540),l=n(64810),a=n(86462),s=n(9184),r=n(96044);t.default=()=>{const e=(0,a.useLocation)();return i.createElement(s.p,{title:"List"},i.createElement("div",{className:"content"},i.createElement("a",{id:"Identity"},i.createElement("h2",null,"List")),i.createElement("p",null,"Lists are essential UI elements that allow items to be organized sequentially in a structured and readable way. They help users view, select, and interact with multiple items conveniently."),i.createElement("div",{className:"filterBtns"},i.createElement(r.default,{className:"/projects/sistent/components/list"===e.pathname?"active":"",onClick:()=>(0,l.navigate)("/projects/sistent/components/list"),title:"Overview"}),i.createElement(r.default,{className:"/projects/sistent/components/list/guidance"===e.pathname?"active":"",onClick:()=>(0,l.navigate)("/projects/sistent/components/list/guidance"),title:"Guidance"}),i.createElement(r.default,{className:"/projects/sistent/components/list/code"===e.pathname?"active":"",onClick:()=>(0,l.navigate)("/projects/sistent/components/list/code"),title:"Code"})),i.createElement("div",{className:"main-content"},i.createElement("p",null,"Lists can be used for various purposes, including displaying items, navigational menus, or highlighting features. The List component provides a flexible container for organizing related items in a vertical layout. It can be customized to display items with icons, buttons, avatars, and other interactive elements. This component is essential for organizing content in a structured, accessible format."),i.createElement("a",{id:"Usage Scenarios"},i.createElement("h2",null,"Usage Scenarios")),i.createElement("ul",null,i.createElement("li",null,"Data Display : Present structured data like files, tasks, or messages using Lists."),i.createElement("li",null,"Navigational Menus : Combine List Items with Buttons or Links for intuitive menus."),i.createElement("li",null,"Interactive Content : Add action buttons to List Items for task management or settings. ")),i.createElement("a",{id:"Design Guidelines"},i.createElement("h2",null,"Design Guidelines")),i.createElement("p",null,"Consistency"),i.createElement("ul",null,i.createElement("li",null,"Maintain a uniform structure across all List Items."),i.createElement("li",null,"Use consistent padding and alignment for easy readability.")),i.createElement("p",null,"Interactive Elements"),i.createElement("ul",null,i.createElement("li",null,"Use ListItemButton for click actions."),i.createElement("li",null," Ensure hover states and focus indicators are visually prominent.")),i.createElement("p",null,"Accessibility"),i.createElement("ul",null,i.createElement("li",null,"Provide descriptive labels for screen readers."),i.createElement("li",null,"Ensure all items are navigable via keyboard.")),i.createElement("a",{id:"General Guidelines"},i.createElement("h2",null,"General Guidelines")),i.createElement("p",null,"1. Purpose & Context"),i.createElement("ul",null,i.createElement("li",null,"Clearly define the purpose of the List (e.g., data grouping, navigation, task management)."),i.createElement("li",null,"Use Lists where a vertical layout enhances user understanding or accessibility.")),i.createElement("p",null,"2. Spacing & Alignment"),i.createElement("ul",null,i.createElement("li",null,"Maintain consistent vertical spacing between items."),i.createElement("li",null,"Align text, icons, and avatars for a clean, organized appearance."),i.createElement("li",null,"Consistent spacing and alignment ensure list items are visually pleasing and easy to scan. Items should be aligned to the left, with adequate padding between elements.")),i.createElement("p",null,"3. Interactive Design"),i.createElement("ul",null,i.createElement("li",null,"For interactive Lists, use actionable items like ListItemButton and ensure buttons or links have proper visual cues (hover/focus states)."),i.createElement("li",null,"Add affordances like icons or colors to signify item state (e.g., completed, active, or disabled).")),i.createElement("p",null,"4. Accessibility"),i.createElement("ul",null,i.createElement("li",null,"Label all List Items using aria-label or aria-labelledby attributes for screen readers."),i.createElement("li",null,"Ensure all interactive elements within a List are keyboard-navigable and have clear focus indicators.")),i.createElement("a",{id:"Component-Specific Guidance"},i.createElement("h2",null,"Component-Specific Guidance")),i.createElement("p",null,"1. List"),i.createElement("ul",null,i.createElement("li",null,"Use the List component as a wrapper for items, ensuring adequate padding and structure."),i.createElement("li",null,"Keep Lists concise; avoid excessive scrolling by grouping items with ListSubheader.")),i.createElement("p",null,"2. List Item"),i.createElement("ul",null,i.createElement("li",null,"Limit content to 1-2 lines of text for readability."),i.createElement("li",null,"Use secondary text sparingly to avoid visual clutter.")),i.createElement("p",null,"3. List Item Button"),i.createElement("ul",null,i.createElement("li",null,"Ensure actionable buttons have a clear purpose, communicated via labels or icons."),i.createElement("li",null,"Avoid excessive buttons in a single List to prevent overwhelming users.")),i.createElement("p",null,"4. List Item Icon"),i.createElement("ul",null,i.createElement("li",null,"Icons should be meaningful and contextually relevant (e.g., ‚úÖ for completed tasks, üîî for notifications)."),i.createElement("li",null,"Align and size icons appropriately relative to the text.")),i.createElement("p",null,"5. List Item Avatar"),i.createElement("ul",null,i.createElement("li",null,"Use avatars to represent users or entities visually"),i.createElement("li",null,"Provide accessible alternatives (e.g., initials or placeholders) when images are unavailable.")),i.createElement("p",null,"6. List Item Text"),i.createElement("ul",null,i.createElement("li",null,"Maintain a clear hierarchy between primaryText (main content) and secondaryText (supporting details)."),i.createElement("li",null,"Ensure text is legible and does not dominate the layout.")),i.createElement("p",null,"7. List Subheader"),i.createElement("ul",null,i.createElement("li",null,"Subheaders should describe the group of items succinctly."),i.createElement("li",null,"Avoid excessive nesting of subheaders to prevent user confusion.")))))}},9184:function(e,t,n){n.d(t,{p:function(){return m}});var i=n(96540),l=n(91580),a=n(66198),s=n(66054),r=n(22514),o=n(64810);const c=n(21250).default.div.withConfig({displayName:"intra-page__JoinCommunityWrapper",componentId:"sc-q3x19t-0"})(["\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n"]);var u=function(){const{0:e,1:t}=(0,i.useState)([]);(0,i.useEffect)((()=>{const e=document.querySelectorAll(".main-content > a");console.log(e),e&&t(Array.from(e).map((e=>({id:e.id,link:`#${e.id}`,text:e.id}))))}),[]);const{0:n,1:l}=(0,i.useState)(null);return(0,i.useEffect)((()=>{const e=window.location.pathname;l(e)}),[]),i.createElement(c,null,i.createElement("div",{className:"intra-page"},i.createElement("ul",null,e.map((e=>i.createElement("li",{key:e.id,className:"list"},i.createElement(o.Link,{to:`${n}${e.link}`,key:e.id,activeClassName:"active"},e.text)))))))};const m=e=>{let{title:t,children:n}=e;return i.createElement(l.A,null,i.createElement("div",{className:"page-header-section"},i.createElement("h1",null,t)),i.createElement(a.A,null),i.createElement("div",{className:"page-section"},i.createElement(s.mc,null,n," ",i.createElement(r.A,null)),i.createElement(u,null)))}}}]);
//# sourceMappingURL=component---src-sections-projects-sistent-components-list-guidance-js-77b3bc4e295426453e7d.js.map