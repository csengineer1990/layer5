{"version":3,"file":"component---src-sections-projects-sistent-components-list-guidance-js-77b3bc4e295426453e7d.js","mappings":"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","sources":["webpack://Layer5/./src/components/SistentNavigation/content.js","webpack://Layer5/./src/components/SistentNavigation/pagination.style.js","webpack://Layer5/./src/components/SistentNavigation/pagination.js","webpack://Layer5/./src/sections/Projects/Sistent/components/list/guidance.js","webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js"],"sourcesContent":["export const content = [\n  { id: 0, link: \"/projects/sistent/about\", text: \"About Sistent\" },\n  { id: 1, link: \"/projects/sistent/identity/color\", text: \"Colors\" },\n  { id: 2, link: \"/projects/sistent/identity/color/guidance\", text: \"Colors\" },\n  { id: 3, link: \"/projects/sistent/identity/color/code\", text: \"Colors\" },\n  { id: 4, link: \"/projects/sistent/identity/spacing\", text: \"Spacing\" },\n  {\n    id: 5,\n    link: \"/projects/sistent/identity/spacing/guidance\",\n    text: \"Spacing\",\n  },\n  { id: 6, link: \"/projects/sistent/identity/spacing/code\", text: \"Spacing\" },\n  { id: 7, link: \"/projects/sistent/identity/typography\", text: \"Typography\" },\n  {\n    id: 8,\n    link: \"/projects/sistent/identity/typography/guidance\",\n    text: \"Typography\",\n  },\n  {\n    id: 9,\n    link: \"/projects/sistent/identity/typography/code\",\n    text: \"Typography\",\n  },\n  { id: 10, link: \"/projects/sistent/components/button\", text: \"Button\" },\n  {\n    id: 10,\n    link: \"/projects/sistent/components/button/guidance\",\n    text: \"Button\",\n  },\n  { id: 11, link: \"/projects/sistent/components/button/code\", text: \"Button\" },\n  {\n    id: 12,\n    link: \"/projects/sistent/components/text-input\",\n    text: \"Text Input\",\n  },\n  {\n    id: 13,\n    link: \"/projects/sistent/components/text-input/guidance\",\n    text: \"Text Input\",\n  },\n  {\n    id: 14,\n    link: \"/projects/sistent/components/text-input/code\",\n    text: \"Text Input\",\n  },\n  {\n    id: 15,\n    link: \"/projects/sistent/components/paper\",\n    text: \"Paper\",\n  },\n  {\n    id: 16,\n    link: \"/projects/sistent/components/paper/guidance\",\n    text: \"Paper\",\n  },\n  {\n    id: 17,\n    link: \"/projects/sistent/components/paper/code\",\n    text: \"Paper\",\n  },\n  {\n    id: 18,\n    link: \"/projects/sistent/components/popper\",\n    text: \"Popper\",\n  },\n  {\n    id: 19,\n    link: \"/projects/sistent/components/popper/guidance\",\n    text: \"Popper\",\n  },\n  {\n    id: 20,\n    link: \"/projects/sistent/components/popper/code\",\n    text: \"Popper\",\n  },\n  {\n    id: 21,\n    link: \"/projects/sistent/components/text-field\",\n    text: \"Text Field\",\n  },\n  {\n    id: 22,\n    link: \"/projects/sistent/components/text-field/guidance\",\n    text: \"Text Field\",\n  },\n  {\n    id: 23,\n    link: \"/projects/sistent/components/text-field/code\",\n    text: \"Text Field\",\n  },\n  {\n    id: 24,\n    link: \"/projects/sistent/components/button-group\",\n    text: \"Button Group\",\n  },\n  {\n    id: 25,\n    link: \"/projects/sistent/components/button-group/guidance\",\n    text: \"Button Group\",\n  },\n  {\n    id: 26,\n    link: \"/projects/sistent/components/button-group/code\",\n    text: \"Button Group\",\n  },\n  {\n    id: 27,\n    link: \"/projects/sistent/components/tooltip\",\n    text: \"Tooltip\",\n  },\n  {\n    id: 25,\n    link: \"/projects/sistent/components/tooltip/guidance\",\n    text: \"Tooltip\",\n  },\n  {\n    id: 26,\n    link: \"/projects/sistent/components/tooltip/code\",\n    text: \"Tooltip\",\n  },\n];\n","import styled from \"styled-components\";\n\nconst TocPaginationWrapper = styled.div`\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  margin: 3rem 2rem 4rem 2rem;\n\n  @media screen and (max-width: 540px) {\n    margin: 0 0 2rem 0;\n    flex-flow: row wrap;\n    gap: 0.3rem;\n  }\n`;\n\nexport default TocPaginationWrapper;\n","import React, { useEffect, useState } from \"react\";\n\nimport { content } from \"./content\";\nimport Button from \"../../reusecore/Button\";\nimport PaginationWrapper from \"./pagination.style\";\n\nconst SistentPagination = () => {\n  const [currentPage, setCurrentPage] = useState(0);\n\n  useEffect(() => {\n    const path = window.location.pathname;\n    const index = content.findIndex((x) => x.link === path);\n    setCurrentPage(index);\n  }, []);\n\n  return (\n    <PaginationWrapper>\n      {currentPage > 0 ? (\n        <Button $secondary $url={content[currentPage - 1]?.link}>\n          &larr; Previous\n        </Button>\n      ) : null}\n\n      {currentPage < content.length - 1 ? (\n        <Button $primary $url={content[currentPage + 1]?.link}>\n          Next &rarr;\n        </Button>\n      ) : null}\n    </PaginationWrapper>\n  );\n};\n\nexport default SistentPagination;\n","import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport { SistentLayout } from \"../../sistent-layout\";\nimport TabButton from \"../../../../../reusecore/Button\";\n\nconst ListGuidance = () => {\n  const location = useLocation();\n\n  return (\n    <SistentLayout title=\"List\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>List</h2>\n        </a>\n        <p>\n          Lists are essential UI elements that allow items to be organized sequentially in a structured and readable way. They help users view, select, and interact with multiple items conveniently.\n        </p>\n\n        <div className=\"filterBtns\">\n          <TabButton\n            className={location.pathname === \"/projects/sistent/components/list\" ? \"active\" : \"\"}\n            onClick={() => navigate(\"/projects/sistent/components/list\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={location.pathname === \"/projects/sistent/components/list/guidance\" ? \"active\" : \"\"}\n            onClick={() => navigate(\"/projects/sistent/components/list/guidance\")}\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={location.pathname === \"/projects/sistent/components/list/code\" ? \"active\" : \"\"}\n            onClick={() => navigate(\"/projects/sistent/components/list/code\")}\n            title=\"Code\"\n          />\n        </div>\n\n        <div className=\"main-content\">\n          <p>\n            Lists can be used for various purposes, including displaying items, navigational menus, or highlighting features. The List component provides a flexible container for organizing related items in a vertical layout. It can be customized to display items with icons, buttons, avatars, and other interactive elements. This component is essential for organizing content in a structured, accessible format.\n          </p>\n\n          <a id=\"Usage Scenarios\">\n            <h2>Usage Scenarios</h2>\n          </a>\n          <ul>\n            <li>Data Display : Present structured data like files, tasks, or messages using Lists.</li>\n            <li>Navigational Menus : Combine List Items with Buttons or Links for intuitive menus.</li>\n            <li>Interactive Content : Add action buttons to List Items for task management or settings. </li>\n          </ul>\n\n          <a id=\"Design Guidelines\">\n            <h2>Design Guidelines</h2>\n          </a>\n\n          <p>Consistency</p>\n          <ul>\n            <li>Maintain a uniform structure across all List Items.</li>\n            <li>Use consistent padding and alignment for easy readability.</li>\n          </ul>\n          <p>Interactive Elements</p>\n          <ul>\n            <li>Use ListItemButton for click actions.</li>\n            <li> Ensure hover states and focus indicators are visually prominent.</li>\n          </ul>\n          <p>Accessibility</p>\n          <ul>\n            <li>Provide descriptive labels for screen readers.</li>\n            <li>Ensure all items are navigable via keyboard.</li>\n          </ul>\n\n          <a id=\"General Guidelines\">\n            <h2>General Guidelines</h2>\n          </a>\n\n          <p>1. Purpose & Context</p>\n          <ul>\n            <li>Clearly define the purpose of the List (e.g., data grouping, navigation, task management).</li>\n            <li>Use Lists where a vertical layout enhances user understanding or accessibility.</li>\n          </ul>\n          <p>2. Spacing & Alignment</p>\n          <ul>\n            <li>Maintain consistent vertical spacing between items.</li>\n            <li>Align text, icons, and avatars for a clean, organized appearance.</li>\n            <li>Consistent spacing and alignment ensure list items are visually pleasing and easy to scan. Items should be aligned to the left, with adequate padding between elements.</li>\n          </ul>\n          <p>3. Interactive Design</p>\n          <ul>\n            <li>For interactive Lists, use actionable items like ListItemButton and ensure buttons or links have proper visual cues (hover/focus states).</li>\n            <li>Add affordances like icons or colors to signify item state (e.g., completed, active, or disabled).</li>\n          </ul>\n          <p>4. Accessibility</p>\n          <ul>\n            <li>Label all List Items using aria-label or aria-labelledby attributes for screen readers.</li>\n            <li>Ensure all interactive elements within a List are keyboard-navigable and have clear focus indicators.</li>\n          </ul>\n\n\n          <a id=\"Component-Specific Guidance\">\n            <h2>Component-Specific Guidance</h2>\n          </a>\n          <p>1. List</p>\n          <ul>\n            <li>Use the List component as a wrapper for items, ensuring adequate padding and structure.</li>\n            <li>Keep Lists concise; avoid excessive scrolling by grouping items with ListSubheader.</li>\n          </ul>\n          <p>2. List Item</p>\n          <ul>\n            <li>Limit content to 1-2 lines of text for readability.</li>\n            <li>Use secondary text sparingly to avoid visual clutter.</li>\n          </ul>\n          <p>3. List Item Button</p>\n          <ul>\n            <li>Ensure actionable buttons have a clear purpose, communicated via labels or icons.</li>\n            <li>Avoid excessive buttons in a single List to prevent overwhelming users.</li>\n          </ul>\n          <p>4. List Item Icon</p>\n          <ul>\n            <li>Icons should be meaningful and contextually relevant (e.g., ✅ for completed tasks, 🔔 for notifications).</li>\n            <li>Align and size icons appropriately relative to the text.</li>\n          </ul>\n          <p>5. List Item Avatar</p>\n          <ul>\n            <li>Use avatars to represent users or entities visually</li>\n            <li>Provide accessible alternatives (e.g., initials or placeholders) when images are unavailable.</li>\n          </ul>\n          <p>6. List Item Text</p>\n          <ul>\n            <li>Maintain a clear hierarchy between primaryText (main content) and secondaryText (supporting details).</li>\n            <li>Ensure text is legible and does not dominate the layout.</li>\n          </ul>\n          <p>7. List Subheader</p>\n          <ul>\n            <li>Subheaders should describe the group of items succinctly.</li>\n            <li>Avoid excessive nesting of subheaders to prevent user confusion.</li>\n          </ul>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\nexport default ListGuidance;","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n"],"names":["content","id","link","text","styled","div","withConfig","displayName","componentId","SistentPagination","_content","_content2","currentPage","setCurrentPage","useState","useEffect","path","window","location","pathname","index","findIndex","x","React","PaginationWrapper","Button","$secondary","$url","length","$primary","ListGuidance","useLocation","SistentLayout","title","className","TabButton","onClick","navigate","JoinCommunityWrapper","contents","setContents","anchors","document","querySelectorAll","console","log","Array","from","map","a","intapath","setIntapath","key","Link","to","activeClassName","_ref","children","SistentWrapper","TOC","Container","IntraPage"],"sourceRoot":""}